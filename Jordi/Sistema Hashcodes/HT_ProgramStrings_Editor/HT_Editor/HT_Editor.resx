<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>